openapi: 3.0.3
info:
  title: JWT API
  version: 1.0.0
  description: JWT authentication
paths:
  /api/user/change_password/:
    post:
      operationId: change_password_create
      tags:
      - change_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
  /api/user/login/:
    post:
      operationId: login_create
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ''
  /api/user/profile/:
    get:
      operationId: profile_retrieve
      tags:
      - profile
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ''
  /api/user/register/:
    post:
      operationId: register_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /api/user/reset_password/{uid}/{token}/:
    post:
      operationId: reset_password_create
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uid
        schema:
          type: string
        required: true
      tags:
      - reset_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPassword'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: ''
  /api/user/reset_password_email/:
    post:
      operationId: reset_password_email_create
      tags:
      - reset_password_email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendPasswordResetEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendPasswordResetEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendPasswordResetEmail'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendPasswordResetEmail'
          description: ''
components:
  schemas:
    ChangePassword:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
          maxLength: 255
        password2:
          type: string
          writeOnly: true
          maxLength: 255
      required:
      - password
      - password2
    ResetPassword:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
          maxLength: 255
        password2:
          type: string
          writeOnly: true
          maxLength: 255
      required:
      - password
      - password2
    SendPasswordResetEmail:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
      required:
      - email
    UserLogin:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 200
        password:
          type: string
          maxLength: 128
      required:
      - email
      - password
    UserRegistration:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        name:
          type: string
          maxLength: 200
        password:
          type: string
          writeOnly: true
          maxLength: 128
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - name
      - password
      - password2
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
